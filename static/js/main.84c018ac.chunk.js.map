{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","cn","href","onClick","handleTabClick","title","content","initialTabs","App","useState","setSelectedTabId","selectedTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC/CC,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAQzE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAgB,UAAQ,OAAvC,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IAAG,CAAE,YAAaN,EAAYG,KAAOD,EAAIC,KACpD,UAAQ,MAHV,SAKE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAnBA,SAACN,GAClBJ,IAAkBI,EAAIC,IACxBJ,EAAcG,GAiBWO,CAAeP,IAHhC,SAKGA,EAAIQ,SATFR,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cCnCfC,EAAc,CAClB,CAAET,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BE,EAAgB,WAC3B,MAA0CC,mBAASF,EAAY,GAAGT,IAAlE,mBAAOL,EAAP,KAAsBiB,EAAtB,KAEMf,EAAcY,EAAYX,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MACtDc,EAAY,GAETI,EAAa,0BAAsBhB,EAAYU,OAMrD,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBY,IACvB,cAAC,EAAD,CACEnB,KAAMe,EACNd,cAAeA,EACfC,cAVgB,SAACG,GACrBa,EAAiBb,EAAIC,WCnBzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.84c018ac.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../Types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  const handleTabClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\" data-cy=\"Tabs\">\n        <ul>\n          {tabs.map((tab: Tab) => (\n            <li\n              key={tab.id}\n              className={cn({ 'is-active': selectedTab.id === tab.id })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Types/Tab';\n\nconst initialTabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(initialTabs[0].id);\n\n  const selectedTab = initialTabs.find((tab) => tab.id === selectedTabId)\n  || initialTabs[0];\n\n  const selectedTitle = `Selected tab is ${selectedTab.title}`;\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{selectedTitle}</h1>\n      <Tabs\n        tabs={initialTabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}